import spark.ModelAndView;
import spark.template.velocity.VelocityTemplateEngine;

import java.util.HashMap;
import java.util.Map;

import static spark.Spark.*;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class App {

    public static void main(String[] args) {
        staticFileLocation("/public");
        String layout = "templates/layout.vtl";

        ProcessBuilder process = new ProcessBuilder();
        Integer port;
        if (process.environment().get("PORT") != null) {
            port = Integer.parseInt(process.environment().get("PORT"));
        } else {
            port = 4567;
        }

        port(port);

        //get all stylist
        get("/", (request, response) -> {
            Map<String, Object> model = new HashMap<String, Object>();
            model.put("stylists", Stylists.all());
            model.put("template", "templates/index.vtl");
            return new ModelAndView(model, layout);
        }, new VelocityTemplateEngine());

        //get stylist form
        get("/stylists/new", (request, response) -> {
            Map<String, Object> model = new HashMap<String, Object>();
            model.put("template", "templates/stylists-form.vtl");
            return new ModelAndView(model, layout);
        }, new VelocityTemplateEngine());

        //add a new category
        post("/stylists", (request, response) -> {
            Map<String, Object> model = new HashMap<String, Object>();
            String name = request.queryParams("name");
            Stylists newStylists = new Stylists(name);
            newStylists.save();
            model.put("template", "templates/success.vtl");
            return new ModelAndView(model, layout);
        }, new VelocityTemplateEngine());

        //edit stylist
        //get the updated category page
        get("/stylistsdit/:stylists_id", (request, response) -> {
            Map<String, Object> model = new HashMap<String, Object>();
            Stylists stylists = Stylists.find(Integer.parseInt(request.params(":stylists_id")));
            model.put("stylists", stylists);
            model.put("template", "templates/stylistsEdit.vtl");
            return new ModelAndView(model, layout);
        }, new VelocityTemplateEngine());

        //update category by id
        post("/stylists/:stylists_id", (request, response) -> {
            Map<String, Object> model = new HashMap<String, Object>();
            Stylists stylists = Stylists.find(Integer.parseInt(request.params("stylists_id")));
            String name = request.queryParams("name");
            stylists.update(name);
            String url = String.format("/", stylists.getId());
            response.redirect(url);
            return new ModelAndView(model, layout);
        }, new VelocityTemplateEngine());

    }
}
